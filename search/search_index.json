{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hardware HDR's schematics and board scans Gekkio's schematics r/Gameboy wiki Gameboy hardware database [[CPU]] Instruction Encoding Bus Interface","title":"Home"},{"location":"CPU/","text":"Misc points The ARM7TDMI cannot switch endianness, it is fixed to liitle endian on the GBA. 4000800h bit 0 swaps BIOS ROM and EWRAM","title":"Index"},{"location":"CPU/Bus%20Interface/","text":"Cycle type signals \u00b6 There are four types of cycles, N, S, I, and C. The CPU specifies what the next cycle type is on the bus (i.e. it is piplined one cycle ahead) using two bits. They are as follows: Cycle Type nMREQ SEQ N 0 0 Nonsequential S 0 1 Sequential I 1 0 Internal C 1 1 Coprocessor register transfer nMREQ = Not memory request When low it indicates a memory access will happen the next cycle SEQ = Sequential Both the above signals become valid during phase 1 and remain valid in phase 2 of the cycle prior to which the cycle it refers to. Address bus \u00b6 A 32 bit bus. The address bus becomes valid during phase 2 of the cycle preceeding the memory access, and remains valid through phase 1 of the actual memory cycle. MAS bus \u00b6 A two bit bus that encodes the size of the memory transfer. It becomes valid during phase 2 of the cycle preceeding the memory access, and remains valid through phase 1 of the actual memory cycle. Read/Write signal \u00b6 One bit signal which indicates whether this is a read or write. It becomes valid during phase 2 of the cycle preceeding the memory access, and remains valid through phase 1 of the actual memory cycle. Data bus \u00b6 A 32 bit bus. During read: Is an input to the CPU. Data must be valid at the end of phase 2. During write: Is an output from the CPU. Valid data appears during phase 1 of the cycle and remains valid through phase 2. Lock signal \u00b6 Indicates that a swap instruction is in progress and the two memory cycles should be regarded as atomic. Becomes valid during phase 2 of the cycle before the first access and remains valid through phase 1 of the second memory access. Opcode signal \u00b6 This signal indicates this is an instruction prefetch. It becomes valid during phase 2 of the cycle preceeding the memory access, and remains valid through phase 1 of the memory cycle. This signal is utilised by the GBA BIOS ROM for execute permission. Translate signal \u00b6 Signalled during memory accesses in user mode. It becomes valid during phase 2 of the cycle preceeding the memory access, and remains valid through phase 1 of the memory cycle. Thumb signal \u00b6 Indicates if the processor is executing in thumb mode. It becomes valid during phase 2 of the cycle preceeding the memory access, and remains valid through phase 1 of the memory cycle.","title":"Bus Interface"},{"location":"CPU/Bus%20Interface/#cycle-type-signals","text":"There are four types of cycles, N, S, I, and C. The CPU specifies what the next cycle type is on the bus (i.e. it is piplined one cycle ahead) using two bits. They are as follows: Cycle Type nMREQ SEQ N 0 0 Nonsequential S 0 1 Sequential I 1 0 Internal C 1 1 Coprocessor register transfer nMREQ = Not memory request When low it indicates a memory access will happen the next cycle SEQ = Sequential Both the above signals become valid during phase 1 and remain valid in phase 2 of the cycle prior to which the cycle it refers to.","title":"Cycle type signals"},{"location":"CPU/Bus%20Interface/#address-bus","text":"A 32 bit bus. The address bus becomes valid during phase 2 of the cycle preceeding the memory access, and remains valid through phase 1 of the actual memory cycle.","title":"Address bus"},{"location":"CPU/Bus%20Interface/#mas-bus","text":"A two bit bus that encodes the size of the memory transfer. It becomes valid during phase 2 of the cycle preceeding the memory access, and remains valid through phase 1 of the actual memory cycle.","title":"MAS bus"},{"location":"CPU/Bus%20Interface/#readwrite-signal","text":"One bit signal which indicates whether this is a read or write. It becomes valid during phase 2 of the cycle preceeding the memory access, and remains valid through phase 1 of the actual memory cycle.","title":"Read/Write signal"},{"location":"CPU/Bus%20Interface/#data-bus","text":"A 32 bit bus. During read: Is an input to the CPU. Data must be valid at the end of phase 2. During write: Is an output from the CPU. Valid data appears during phase 1 of the cycle and remains valid through phase 2.","title":"Data bus"},{"location":"CPU/Bus%20Interface/#lock-signal","text":"Indicates that a swap instruction is in progress and the two memory cycles should be regarded as atomic. Becomes valid during phase 2 of the cycle before the first access and remains valid through phase 1 of the second memory access.","title":"Lock signal"},{"location":"CPU/Bus%20Interface/#opcode-signal","text":"This signal indicates this is an instruction prefetch. It becomes valid during phase 2 of the cycle preceeding the memory access, and remains valid through phase 1 of the memory cycle. This signal is utilised by the GBA BIOS ROM for execute permission.","title":"Opcode signal"},{"location":"CPU/Bus%20Interface/#translate-signal","text":"Signalled during memory accesses in user mode. It becomes valid during phase 2 of the cycle preceeding the memory access, and remains valid through phase 1 of the memory cycle.","title":"Translate signal"},{"location":"CPU/Bus%20Interface/#thumb-signal","text":"Indicates if the processor is executing in thumb mode. It becomes valid during phase 2 of the cycle preceeding the memory access, and remains valid through phase 1 of the memory cycle.","title":"Thumb signal"},{"location":"CPU/Instruction%20Encoding/","text":"See the following encoding tables: Arm Encoding Table","title":"Instruction Encoding"}]}